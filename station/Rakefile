require 'yaml'
require 'erb'

Dir["#{Station.root}/station/lib/tasks/*.rake"].each { |f| load f }
Dir["#{Station.root}/parser/*/tasks/**/*.rake"].each { |f| load f }

namespace :db do
  def db_operation(operator)
    Rake::Task["station:db:#{operator}"].invoke([])
    Dir["#{Station.root}/parser/*"].each do |dir|
      module_name = dir.split('/').last
      puts module_name, operator
      Rake::Task["db:#{operator}"].invoke(module_name)
    end
  end

  desc 'db:create[module_name]'
  task :create, [:module_name] => 'station:db:environment' do |_t, args|
    Station::Utils.create_database(args[:module_name])
  end

  desc 'db:migrate[module_name]'
  task :migrate, [:module_name] => 'station:db:environment' do |_t, args|
    version = ENV['VERSION']
    path = "#{Station::Utils.module_path(args[:module_name])}/db/migrate"
    puts path
    ActiveRecord::Migrator.migrate(path, version ? version.to_i : nil)
  end

  desc 'create all module database'
  task :create_all do
    db_operation(:create)
  end

  desc 'migrate all module database'
  task :migrate_all do
    db_operation(:migrate)
  end
end

desc 'lunch station system'
task :launch do
  Station::Launcher.new.start
end

desc 'show module list'
task :module_list do
  Dir['parser/*'].each { |dir| puts dir.split('/').last }
end

task default: %w(launch)
